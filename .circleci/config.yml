# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:11.0.0
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install
      - run: npm run build

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
        
      # run tests!
      # - run: npm test
  test:
    docker:
      # specify the version you desire here
      - image: circleci/node:11.0.0

    working_directory: ~/repo

    steps:
      # - checkout
      # - run: npm install
      - restore_cache:
          keys:
          # - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: Test
          command: npm test
      - store_artifacts:
          path: test-results.xml
          prefix: tests
  component_test:
    docker:
      # specify the version you desire here
      - image: circleci/node:11.0.0
      - image: redis@sha256:54057dd7e125ca41afe526a877e8bd35ec2cdd33b9217e022ed37bdcf7d09673

    working_directory: ~/repo

    steps:
      # - checkout
      # - run: npm install
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: run API
          command: npm start
      - run:
          name: run test
          command: curl http://localhost:3000
      # - store_artifacts:
      #     path: test-results.xml
      #     prefix: tests


workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
          filters:
            branches:
              only: master
      - component_test:
          requires:
            - test
          filters:
            branches:
              only: master
